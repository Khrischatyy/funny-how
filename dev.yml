services:
  nginx:
    container_name: nginx
    build:
      context: ./proxy/
      dockerfile: Dockerfile
    ports:
      - "80:80"
    volumes:
      - './backend:/app/'
      - './proxy/nginx.conf:/etc/nginx/nginx.conf'
    depends_on:
      - backend
      - frontend
      - swagger
    networks:
      - funny

  db:
    image: postgres:16
    container_name: funny_db
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_HOST=${DB_HOST}
      - POSTGRES_DB=${DB_DATABASE}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    networks:
      - funny

  backend:
    build:
      context: ./backend/php/
      args:
        WWWUSER: 'laravel'
        WWWUID: '1000'
    container_name: php
    volumes:
      - './backend:/app/'
    depends_on:
      - db
    networks:
      - funny
    env_file:
      - .env

  frontend:
    container_name: frontend
    build:
      context: ./frontend/client
      dockerfile: Dockerfile
      args:
        - NODE_ENV=development
        - AXIOS_BASEURL=http://nginx
        - AXIOS_BASEURL_CLIENT=http://127.0.0.1
        - AXIOS_API_VERSION=/api/v1
    expose:
      - "3000"
    ports:
      - "3000:3000"
    command: "npm run dev"
    environment:
      - NODE_ENV=development
      - AXIOS_BASEURL=http://nginx
      - AXIOS_BASEURL_CLIENT=http://127.0.0.1
      - AXIOS_API_VERSION=/api/v1
      - NUXT_ENV_GOOGLE_MAPS_API=${GOOGLE_MAPS_API:-default_map_key}
    volumes:
      - ./frontend/client:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - funny

  swagger:
    image: swaggerapi/swagger-ui
    container_name: swagger
    ports:
      - "8080:8080"
    environment:
      SWAGGER_JSON: /app/storage/api-docs/documentation.json
    volumes:
      - ./backend:/app
    networks:
      - funny

  rabbitmq:
    image: rabbitmq:3.13.4-management-alpine
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    volumes:
      - ./rabbitmq:/etc/rabbitmq
    command: ["sh", "-c", "rabbitmq-plugins enable rabbitmq_management && rabbitmq-server"]
    networks:
      - funny

  queue-worker:
    build:
      context: ./backend/php/
      dockerfile: Dockerfile
      args:
        WWWUSER: 'laravel'
        WWWUID: '1000'
    container_name: queue-worker
    volumes:
      - './backend:/app/'
    depends_on:
      - backend
      - rabbitmq
      - db
    networks:
      - funny
    env_file:
      - .env
    command: php /app/artisan queue:work --sleep=3 --tries=3
    restart: always

  scheduler:
    build:
      context: ./backend/php/
      dockerfile: Dockerfile
      args:
        WWWUSER: 'laravel'
        WWWUID: '1000'
    container_name: scheduler
    volumes:
      - './backend:/app/'
    depends_on:
      - backend
      - rabbitmq
      - db
    networks:
      - funny
    env_file:
      - .env
    command: php /app/artisan schedule:work --verbose --no-interaction
    restart: always

networks:
  funny:
    driver: bridge