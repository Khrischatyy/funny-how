FROM php:8.1-fpm

# Arguments defined in docker-compose.yml
ARG WWWUSER
ARG WWWUID

# Set working directory
WORKDIR /app/

ENV DEBIAN_FRONTEND noninteractive
ENV TZ=UTC

# Install system dependencies
RUN apt-get update && apt-get install -y \
    libpq-dev \
    libicu-dev \
    libjpeg62-turbo-dev \
    libpng-dev \
    libxml2-dev \
    libgmp-dev \
    libzip-dev \
    zip \
    unzip \
    curl \
    git \
    libmagickwand-dev --no-install-recommends \
    cron \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install PHP extensions
RUN docker-php-ext-install -j$(nproc) iconv mysqli pdo_pgsql pdo_mysql soap bcmath gmp intl opcache zip sockets

# Install Imagick
RUN pecl install imagick \
    && docker-php-ext-enable imagick

# Get latest Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Create system user to run Composer and Artisan Commands
RUN useradd -G www-data,root -u $WWWUID -d /home/$WWWUSER $WWWUSER \
    && mkdir -p /home/$WWWUSER/.composer \
    && chown -R $WWWUSER:$WWWUSER /home/$WWWUSER

COPY php-production.ini /etc/php/8.1/fpm/conf.d/xy-custom.ini

# Ensure cron directory exists and set up cron
RUN mkdir -p /etc/cron.d && touch /etc/cron.d/root && chmod 644 /etc/cron.d/root
COPY cron-schedule.sh /usr/local/bin/cron-schedule.sh
RUN chmod +x /usr/local/bin/cron-schedule.sh

# Copy the rest of the application code
COPY --chown=$WWWUSER:$WWWUSER . .

# Ensure storage directory has the correct permissions
RUN mkdir -p /app/storage/logs \
    && chown -R $WWWUSER:www-data /app/storage/logs \
    && chmod -R 775 /app/storage/logs


CMD ["php-fpm"]

USER $WWWUSER